
services:
  mysql_ordersdb:
    image: mysql:latest
    container_name: mysql-ordersdb-container
    environment:
      MYSQL_ROOT_PASSWORD: admin12345
      MYSQL_DATABASE: orders_db
    volumes:
      - ./docker/mysql/orders_db_data:/var/lib/mysql
    networks:
      - ali-network
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ordenservice:
    build:
      context: ./OrdenService
      dockerfile: Dockerfile
    container_name: ordenservice-container
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_ordersdb:3306/orders_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin12345
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_SERVER_ADDRESS=0.0.0.0
      - SPRING_SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:8787/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI=http://keycloak:8181/realms/spring-keyclock-realm

    depends_on:
      mysql_ordersdb:
        condition: service_healthy
    networks:
      - ali-network

  mysql_productsdb:
    image: mysql:latest
    container_name: mysql-productsdb-container
    environment:
      MYSQL_ROOT_PASSWORD: admin12345
      MYSQL_DATABASE: products_db
    volumes:
      - ./docker/mysql/products_db_data:/var/lib/mysql
    networks:
      - ali-network
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  productservice:
    build:
      context: ./ProductoService
      dockerfile: Dockerfile
    container_name: productservice-container
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_productsdb:3306/products_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=admin12345
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_SERVER_ADDRESS=0.0.0.0
      - SPRING_SERVER_PORT=8084
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:8787/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI=http://keycloak:8181/realms/spring-keyclock-realm

    depends_on:
      mysql_productsdb:
        condition: service_healthy
    networks:
      - ali-network

  discoveryserver:
    build:
      context: ./discoveryservice
      dockerfile: Dockerfile
    container_name: discoveryserver-container
    ports:
      - "8787:8787"
    environment:
      - EUREKA_SERVER_PORT=8787
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - ali-network

  apigateway:
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    container_name: apigateway
    environment:
      - SPRING_SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discoveryserver:8787/eureka/
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI=http://keycloak:8181/realms/spring-keyclock-realm

    depends_on:
      - discoveryserver
    networks:
      - ali-network
    ports:
      - "8080:8080"

  keycloak-mysql:
    container_name: keycloak-mysql-container
    image: mysql:latest
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak-container
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

volumes:
  orders_db_data:
  products_db_data:
  mysql_keycloak_data:

networks:
  ali-network:
    driver: bridge