version: '3.8'
services:
  mysql_ordersdb:
    image: mysql:latest
    container_name: mysql-ordersdb-container
    environment:
      MYSQL_ROOT_PASSWORD: admin12345
      MYSQL_DATABASE: orders_db
    volumes:
      - ./docker/mysql/orders_db_data:/var/lib/mysql
    networks:
      - ali-network
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql_productsdb:
    image: mysql:latest
    container_name: mysql-productsdb-container
    environment:
      MYSQL_ROOT_PASSWORD: admin12345
      MYSQL_DATABASE: products_db
    volumes:
      - ./docker/mysql/products_db_data:/var/lib/mysql
    networks:
      - ali-network
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-mysql:
    container_name: keycloak-mysql-container
    image: mysql:latest
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak-container
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: keycloak-mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

volumes:
  orders_db_data:
  products_db_data:

networks:
  ali-network:
    driver: bridge